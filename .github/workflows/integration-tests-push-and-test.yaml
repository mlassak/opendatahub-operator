name: integration-tests-push-and-test.yaml
on:
  workflow_run:
    workflows: [ "Integration tests - build images" ]
    types:
      - completed
env:
  IMAGE_TAG_BASE: quay.io/${{ secrets.QUAY_ORG }}/opendatahub-operator
  TAG: pr-${{ github.event.number }}
  IMAGES_ZIP: operator-images.zip
jobs:
  download-artifact-data:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.artifact-data.outputs.pr_number }}
    steps:
      - name: Download artifact
        id: artifact-download
        uses: actions/github-script@v7
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "operator-images"
            })[0];
            
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_number.zip`, Buffer.from(download.data));

      - name: Podman load
        run: |
          podman load --input ${{ env.IMAGES_ZIP }}
  create-catalog-image:
    needs:
      - download-artifact-data
    name: Push catalog image
    runs-on: ubuntu-latest
    env:
      IMAGE_BUILDER: podman
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Quay.io login
        uses: redhat-actions/podman-login@v1
        env:
          QUAY_ID: ${{ secrets.QUAY_ID }}
          QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
        with:
          registry: quay.io
          username: ${{ env.QUAY_ID }}
          password: ${{ env.QUAY_TOKEN }}

      - name: Get latest release version
        env:
          OPERATOR_REPOSITORY_NAME: opendatahub-io/opendatahub-operator
        run: |
          version_tag=$(curl -s https://api.github.com/repos/${OPERATOR_REPOSITORY_NAME}/releases/latest | jq -r .tag_name)-${{ env.TAG }}
          echo "VERSION_TAG=$version_tag" >> $GITHUB_ENV

      - name: Push operator image
        env:
          IMG: ${{ env.IMAGE_TAG_BASE }}:${{ env.TAG }}
        run: |
          make image-push

      - name: Push bundle image
        env:
          BUNDLE_IMG: ${{ env.IMAGE_TAG_BASE }}-bundle:${VERSION_TAG}
        run: |
          make bundle-push

      - name: Build and push catalog image
        env:
          BUNDLE_IMG: ${{ env.IMAGE_TAG_BASE }}-bundle:${VERSION_TAG}
          CATALOG_IMG: ${{ env.IMAGE_TAG_BASE }}-catalog:${VERSION_TAG}
        run: |
          make catalog-build CATALOG_IMG=${{ env.CATALOG_IMG }} BUNDLE_IMG=${{ env.BUNDLE_IMG }}
          make catalog-push CATALOG_IMG=${{ env.CATALOG_IMG }}
          
